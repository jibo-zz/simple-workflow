# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Commands
commands:
  print_pipeline_id:
    description: "Prints the Circle CI Workflow ID from its environment variable name"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
# Jobs
jobs:
  # This is our first job.
  save_hello_world_output: 
    # it uses the docker executor
    docker:
      - image: circleci/node:13.8.0 # specifically, a docker image with node 13.8.0
    # Steps are a list of commands to run inside the docker container above.
    steps:
      - run: echo "hello world" > ~/output.txt # This prints "A first hello" to stdout.
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
   # This is our second job.
  print_output_fil: 
    # it uses the docker executor
    docker:
      - image: circleci/node:13.8.0 # specifically, a docker image with node 13.8.0
    # Steps are a list of commands to run inside the docker container above.
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt
  my_job:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: return 1
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail
  my_job_id:
    docker:
      - image: alpine:latest
    steps:
      - print_pipeline_id  
# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  udacity:
    # Run the welcome/run job in its own container
    jobs:
      - save_hello_world_output
      - print_output_fil:
          requires:
            - save_hello_world_output
      - my_job
      - my_job_id
